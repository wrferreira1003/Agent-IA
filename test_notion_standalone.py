#!/usr/bin/env python3
"""
Teste isolado das fun√ß√µes do Notion para verificar se est√£o funcionando corretamente.
Execute: python test_notion_standalone.py
"""

import os
import sys
sys.path.append('.')

from app.agents.tools.notion_tools import create_notion_page_impl, read_notion_page

def test_notion_read():
    """Testa a fun√ß√£o de leitura da p√°gina do Notion"""
    print("üîç Testando leitura da p√°gina do Notion...")
    print("-" * 50)
    
    try:
        result = read_notion_page()
        
        if "‚ùå Erro" in result:
            print("‚ùå FALHA: Erro ao ler p√°gina do Notion")
            print(f"Detalhes: {result}")
            return False
        else:
            print("‚úÖ SUCESSO: P√°gina lida com sucesso")
            print(f"Conte√∫do obtido: {len(result)} caracteres")
            print(f"Preview: {result[:200]}...")
            return True
            
    except Exception as e:
        print(f"‚ùå FALHA: Exce√ß√£o durante leitura - {e}")
        return False

def test_notion_create():
    """Testa a fun√ß√£o de cria√ß√£o de p√°gina no Notion"""
    print("\nüìù Testando cria√ß√£o de p√°gina no Notion...")
    print("-" * 50)
    
    try:
        title = "Teste de Cria√ß√£o - Fun√ß√£o Isolada"
        content = "Esta √© uma p√°gina de teste criada pela fun√ß√£o isolada de cria√ß√£o do Notion."
        
        result = create_notion_page_impl(title, content)
        
        if "Falha" in result:
            print("‚ùå FALHA: Erro ao criar p√°gina no Notion")
            print(f"Detalhes: {result}")
            return False
        else:
            print("‚úÖ SUCESSO: P√°gina criada com sucesso")
            print(f"Resultado: {result}")
            return True
            
    except Exception as e:
        print(f"‚ùå FALHA: Exce√ß√£o durante cria√ß√£o - {e}")
        return False

def test_configuration():
    """Verifica se as configura√ß√µes do Notion est√£o corretas"""
    print("\n‚öôÔ∏è Verificando configura√ß√µes do Notion...")
    print("-" * 50)
    
    try:
        from app.core.config import settings
        
        # Verifica se as vari√°veis est√£o definidas
        api_key = getattr(settings, 'NOTION_API_KEY', None)
        db_id = getattr(settings, 'NOTION_DATABASE_ID', None)
        
        if not api_key:
            print("‚ùå NOTION_API_KEY n√£o est√° definida")
            return False
        
        if not db_id:
            print("‚ùå NOTION_DATABASE_ID n√£o est√° definida")
            return False
        
        print(f"‚úÖ NOTION_API_KEY: {'*' * (len(api_key) - 4)}{api_key[-4:]}")
        print(f"‚úÖ NOTION_DATABASE_ID: {db_id}")
        
        # Verifica se o cliente pode ser inicializado
        import notion_client
        client = notion_client.Client(auth=api_key)
        print("‚úÖ Cliente Notion inicializado com sucesso")
        
        return True
        
    except Exception as e:
        print(f"‚ùå FALHA: Erro na configura√ß√£o - {e}")
        return False

def main():
    """Executa todos os testes das fun√ß√µes do Notion"""
    print("üöÄ TESTE ISOLADO DAS FUN√á√ïES DO NOTION")
    print("=" * 60)
    
    # Testa configura√ß√£o
    config_ok = test_configuration()
    
    if not config_ok:
        print("\n‚ùå TESTE INTERROMPIDO: Configura√ß√µes incorretas")
        print("\nVerifique se o arquivo .env cont√©m:")
        print("NOTION_API_KEY=your_notion_api_key")
        print("NOTION_DATABASE_ID=your_page_id")
        return
    
    # Testa leitura
    read_ok = test_notion_read()
    
    # Testa cria√ß√£o
    create_ok = test_notion_create()
    
    # Resultado final
    print("\n" + "=" * 60)
    print("üìä RESULTADO FINAL:")
    print(f"  üîß Configura√ß√£o: {'‚úÖ OK' if config_ok else '‚ùå FALHA'}")
    print(f"  üìñ Leitura: {'‚úÖ OK' if read_ok else '‚ùå FALHA'}")
    print(f"  üìù Cria√ß√£o: {'‚úÖ OK' if create_ok else '‚ùå FALHA'}")
    
    if all([config_ok, read_ok, create_ok]):
        print("\nüéâ TODAS AS FUN√á√ïES DO NOTION EST√ÉO FUNCIONANDO!")
    else:
        print("\n‚ö†Ô∏è ALGUMAS FUN√á√ïES APRESENTARAM PROBLEMAS")
        
        if not read_ok:
            print("\nüí° Para corrigir problemas de leitura:")
            print("1. Verifique se a integra√ß√£o tem acesso √† p√°gina")
            print("2. Confirme o ID da p√°gina no NOTION_DATABASE_ID")
            
        if not create_ok:
            print("\nüí° Para corrigir problemas de cria√ß√£o:")
            print("1. Verifique se a integra√ß√£o tem permiss√µes de escrita")
            print("2. Confirme se o ID √© de uma p√°gina (n√£o database)")

if __name__ == "__main__":
    main()